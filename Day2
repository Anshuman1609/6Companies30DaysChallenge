Day2

Q1. Combination Sum III
    
  Find all valid combinations of k numbers that sum up to n such that the following conditions are true:
    Only numbers 1 through 9 are used.
    Each number is used at most once.
    Return a list of all possible valid combinations. The list must not contain the same combination twice, and the combinations may be returned in any order.

Solution :-

    class Solution {
    public:
        void Solve(int ind, int k, int target, vector<int> &arr, vector<int> &ds, vector<vector<int>> &ans) {
            if (ds.size() == k) { 
                if (target == 0) {
                    ans.push_back(ds);
                }   
                return;
            }
            for (int i = ind; i < arr.size(); i++) {
                if (target < arr[i])
                    break;
                target = target - arr[i];
                ds.push_back(arr[i]);
                Solve(i + 1, k, target, arr, ds, ans);
                target = target + arr[i];
                ds.pop_back();
                }
    
            return;
        }
        vector<vector<int>> combinationSum3(int k, int n) {
            
            vector<int> arr = {1, 2, 3, 4, 5, 6, 7, 8, 9};
            vector<vector<int>> ans;
            vector<int> ds;
            Solve(0, k, n, arr, ds, ans);
            return ans;
        }
    };
      
